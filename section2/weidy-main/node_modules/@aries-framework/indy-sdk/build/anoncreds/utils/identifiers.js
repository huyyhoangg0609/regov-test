"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.didFromRevocationRegistryDefinitionId = exports.didFromCredentialDefinitionId = exports.didFromSchemaId = exports.getLegacyCredentialDefinitionId = exports.getLegacySchemaId = exports.getIndySeqNoFromUnqualifiedCredentialDefinitionId = exports.indySdkAnonCredsRegistryIdentifierRegex = exports.legacyIndyRevocationRegistryIdRegex = exports.legacyIndyCredentialDefinitionIdRegex = exports.legacyIndySchemaIdRegex = exports.legacyIndyIssuerIdRegex = void 0;
exports.legacyIndyIssuerIdRegex = /^[a-zA-Z0-9]{21,22}$/;
exports.legacyIndySchemaIdRegex = /^[a-zA-Z0-9]{21,22}:2:.+:[0-9.]+$/;
exports.legacyIndyCredentialDefinitionIdRegex = /^[a-zA-Z0-9]{21,22}:3:CL:(([1-9][0-9]*)|([a-zA-Z0-9]{21,22}:2:.+:[0-9.]+)):(.+)?$/;
exports.legacyIndyRevocationRegistryIdRegex = /^[a-zA-Z0-9]{21,22}:4:[a-zA-Z0-9]{21,22}:3:CL:(([1-9][0-9]*)|([a-zA-Z0-9]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)/;
exports.indySdkAnonCredsRegistryIdentifierRegex = new RegExp(`${exports.legacyIndyIssuerIdRegex.source}|${exports.legacyIndySchemaIdRegex.source}|${exports.legacyIndyCredentialDefinitionIdRegex.source}|${exports.legacyIndyRevocationRegistryIdRegex.source}`);
function getIndySeqNoFromUnqualifiedCredentialDefinitionId(unqualifiedCredentialDefinitionId) {
    // 5nDyJVP1NrcPAttP3xwMB9:3:CL:56495:npbd
    const [, , , seqNo] = unqualifiedCredentialDefinitionId.split(':');
    return Number(seqNo);
}
exports.getIndySeqNoFromUnqualifiedCredentialDefinitionId = getIndySeqNoFromUnqualifiedCredentialDefinitionId;
function getLegacySchemaId(unqualifiedDid, name, version) {
    return `${unqualifiedDid}:2:${name}:${version}`;
}
exports.getLegacySchemaId = getLegacySchemaId;
function getLegacyCredentialDefinitionId(unqualifiedDid, seqNo, tag) {
    return `${unqualifiedDid}:3:CL:${seqNo}:${tag}`;
}
exports.getLegacyCredentialDefinitionId = getLegacyCredentialDefinitionId;
/**
 * Extract did from schema id
 */
function didFromSchemaId(schemaId) {
    const [did] = schemaId.split(':');
    return did;
}
exports.didFromSchemaId = didFromSchemaId;
/**
 * Extract did from credential definition id
 */
function didFromCredentialDefinitionId(credentialDefinitionId) {
    const [did] = credentialDefinitionId.split(':');
    return did;
}
exports.didFromCredentialDefinitionId = didFromCredentialDefinitionId;
/**
 * Extract did from revocation registry definition id
 */
function didFromRevocationRegistryDefinitionId(revocationRegistryId) {
    const [did] = revocationRegistryId.split(':');
    return did;
}
exports.didFromRevocationRegistryDefinitionId = didFromRevocationRegistryDefinitionId;
//# sourceMappingURL=identifiers.js.map